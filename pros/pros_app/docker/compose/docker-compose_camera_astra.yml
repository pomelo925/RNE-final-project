services:
  camera:
    image: ghcr.io/screamlab/pros_jetson_driver_image:0.1.0
    env_file:
      - .env
    devices:
      - "/dev/video0:/dev/video0"
      - "/dev/video1:/dev/video1"
    privileged: true
    networks:
      - my_bridge_network
    command: "ros2 launch astra_camera astro_pro_plus.launch.xml"

  rosbridge:
    image: ghcr.io/screamlab/pros_base_image:0.0.2
    env_file:
      - .env
    networks:
      - my_bridge_network
    ports:
      - 9090:9090
    command: "ros2 launch rosbridge_server rosbridge_websocket_launch.xml"

  compress:
    image: ghcr.io/screamlab/pros_jetson_driver_image:0.1.0
    env_file:
      - .env
    networks:
      - my_bridge_network
    depends_on:
      - camera
    command: "ros2 run image_transport republish raw --ros-args --remap in:=camera/color/image_raw -p out:=camera/compressed"

# This will create a docker bridge network
# docker network create --driver bridge pros_app_my_bridge_network
# You can see the network by docker network ls
networks:
  my_bridge_network:
    driver: bridge
